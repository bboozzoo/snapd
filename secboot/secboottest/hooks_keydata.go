// Code generated by MockGen. DO NOT EDIT.
// Source: .. (interfaces: SecbootHooksKeyDataSetter)
//
// Generated by this command:
//
//	mockgen -package secboottest -destination hooks_keydata.go .. SecbootHooksKeyDataSetter
//

// Package secboottest is a generated GoMock package.
package secboottest

import (
	io "io"
	reflect "reflect"

	secboot "github.com/snapcore/secboot"
	gomock "go.uber.org/mock/gomock"
)

// MockSecbootHooksKeyDataSetter is a mock of SecbootHooksKeyDataSetter interface.
type MockSecbootHooksKeyDataSetter struct {
	ctrl     *gomock.Controller
	recorder *MockSecbootHooksKeyDataSetterMockRecorder
	isgomock struct{}
}

// MockSecbootHooksKeyDataSetterMockRecorder is the mock recorder for MockSecbootHooksKeyDataSetter.
type MockSecbootHooksKeyDataSetterMockRecorder struct {
	mock *MockSecbootHooksKeyDataSetter
}

// NewMockSecbootHooksKeyDataSetter creates a new mock instance.
func NewMockSecbootHooksKeyDataSetter(ctrl *gomock.Controller) *MockSecbootHooksKeyDataSetter {
	mock := &MockSecbootHooksKeyDataSetter{ctrl: ctrl}
	mock.recorder = &MockSecbootHooksKeyDataSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecbootHooksKeyDataSetter) EXPECT() *MockSecbootHooksKeyDataSetterMockRecorder {
	return m.recorder
}

// SetAuthorizedSnapModels mocks base method.
func (m *MockSecbootHooksKeyDataSetter) SetAuthorizedSnapModels(r io.Reader, key secboot.PrimaryKey, models ...secboot.SnapModel) error {
	m.ctrl.T.Helper()
	varargs := []any{r, key}
	for _, a := range models {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "SetAuthorizedSnapModels", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetAuthorizedSnapModels indicates an expected call of SetAuthorizedSnapModels.
func (mr *MockSecbootHooksKeyDataSetterMockRecorder) SetAuthorizedSnapModels(r, key any, models ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{r, key}, models...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAuthorizedSnapModels", reflect.TypeOf((*MockSecbootHooksKeyDataSetter)(nil).SetAuthorizedSnapModels), varargs...)
}

summary: Check that command-chain is properly supported

details: |
    Verify the command-chain feature works as expected for hooks, apps, and
    services. Rather than running the hook, app, or service directly, the
    command-chain should be prefixed to the target command. Additionally verify
    that the command-chain is executed when running a snap with `snap run
    --shell`.

environment:
    # Ensure that running purely from the deb (without re-exec) works
    # correctly
    SNAP_REEXEC/reexec0: 0
    SNAP_REEXEC/reexec1: 1
    BREADCRUMB: /var/snap/command-chain/current/breadcrumb
    ENVDUMP: /var/snap/command-chain/current/env

prepare: |
    echo "Build command chain snap"
    snap pack command-chain
    snap install --dangerous command-chain_1.0_all.snap

execute: |
    echo "Test that command-chain runs for hooks"
    [ "$(cat "$BREADCRUMB")" = "chain1 chain2 configure" ]
    MATCH '^CHAIN_1_RAN=1$' < "$ENVDUMP"
    MATCH '^CHAIN_2_RAN=1$' < "$ENVDUMP"

    if [ "$SNAP_REEXEC" = "1" ] && (os.query is-fedora || os.query is-amazon-linux || os-query is-opensuse-tumbleweed) ; then
        # we now support explicitly enabling reexec, which may fail when
        # snap-confine is under /usr/libexec/snapd, on those systems expect a
        # very specific error
        if command-chain.hello > err.out 2>&1; then
            echo "unexpected success"
            cat err.out || true
            exit 1
        fi

         MATCH "running from unexpected location:" < err.out
         exit 0
    fi

    echo "Test that command-chain runs for apps"
    [ "$(command-chain.hello)" = "chain1 chain2 hello" ]

    echo "Test that command-chain runs for services"
    # let the logs catch up
    sleep 1
    snap logs command-chain | MATCH 'chain3 chain4 running: 0 0 1 1$'

    echo "Ensure that the command-chain is run with 'snap run --shell' as well"
    [ "$(snap run --shell command-chain.hello -c 'echo "shell"')" = "chain1 chain2 shell" ]
    env="$(snap run --shell command-chain.hello -c 'env')"
    echo "$env" | MATCH '^CHAIN_1_RAN=1$'
    echo "$env" | MATCH '^CHAIN_2_RAN=1$'
